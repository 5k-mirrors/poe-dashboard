{
  "name": "poe-dashboard",
  "version": "1.0.0",
  "description": "Customizable economy dashboard for Path of Exile https://thisismydesign.github.io/poe-dashboard/",
  "private": true,
  "scripts": {
    "dev": "webpack-dev-server --env.ENVIRONMENT=development --mode development",
    "start": "serve -s dist",
    "transpile": "babel src -d dist --copy-files",
    "build": "webpack --env.ENVIRONMENT=production --env.GA_TOKEN=$GA_TOKEN --mode production",
    "test": "jest",
    "test-coverage": "jest --coverage",
    "lint": "eslint src",
    "lint-rule-check": "eslint --print-config . | eslint-config-prettier-check",
    "lint-write": "eslint src/ --fix",
    "gh-publish": "npm run build && npm run deploy",
    "heroku-postbuild": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thisismydesign/poe-dashboard"
  },
  "author": "team-super",
  "homepage": "http://thisismydesign.github.io/poe-dashboard",
  "//devDependencies": {
    "babel-cli": "built-in CLI which can be used to compile files from the command line - the transpile script uses this",
    "babel-core": "core tansform to ES5, uses .babelrc config file",
    "babel-loader": "allows transpiling JavaScript files using Babel and webpack",
    "babel-plugin-module-resolver": "add a new resolver for your modules when compiling your code using Babel, e.g. in .babelrc module-resolver",
    "babel-plugin-transform-class-properties": "transforms static class properties as well as properties declared with the property initializer syntax, probably the grid layout uses with defaultProps",
    "babel-polyfill": "fix regeneratorRunTimeError, allows built-in things such as Promise to fetch leagues/items",
    "babel-preset-env": "allows use latest javascript",
    "babel-preset-react": "JSX features",
    "css-loader": "translates CSS into CommonJS",
    "dotenv-webpack": "allows environment variables in process.env",
    "enzyme": "testing utilities for React",
    "enzyme-adapter-react-16": "corresponding to the version of react that we're using",
    "enzyme-to-json": "Convert Enzyme wrappers to a format compatible with Jest snapshot testing - we may don't need it yet",
    "eslint": "linter",
    "eslint-config-airbnb": "provides Airbnb's .eslintrc as an extensible shared config",
    "eslint-plugin-import": "intends to support linting of ES2015+ (ES6+) import/export syntax, and prevent issues with misspelling of file paths and import names",
    "eslint-plugin-jsx-a11y": "Static AST checker for accessibility rules on JSX elements - but we don't define this in .eslintrc, so actually not using",
    "eslint-plugin-react": "React specific linting rules for ESLint",
    "file-loader": "A file loader module for webpack - e.g. image extensions",
    "html-webpack-plugin": "this generates the dist/index.html file",
    "jest": "javascript testing",
    "node-sass": "allows you to natively compile .scss files to css",
    "sass-loader": "compiles Sass to CSS, using Node Sass by default",
    "style-loader": "creates style nodes from JS strings",
    "webpack": "module bundler",
    "webpack-cli": "providing a flexible set of commands",
    "webpack-dev-server": "provides live reloading"
  },
  "devDependencies": {
    "babel-core": "^6.26.3",
    "babel-eslint": "^10.0.1",
    "babel-loader": "^7.1.4",
    "babel-plugin-module-resolver": "^3.1.1",
    "babel-plugin-styled-components": "^1.8.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "css-loader": "^1.0.0",
    "dotenv-webpack": "^1.5.7",
    "enzyme": "^3.6.0",
    "enzyme-adapter-react-16": "^1.5.0",
    "enzyme-to-json": "^3.3.4",
    "eslint": "^5.5.0",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-config-prettier": "^4.0.0",
    "eslint-import-resolver-babel-module": "^4.0.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-jsx-a11y": "^6.1.1",
    "eslint-plugin-prettier": "^3.0.1",
    "eslint-plugin-react": "^7.11.1",
    "file-loader": "^2.0.0",
    "html-webpack-plugin": "^3.2.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^23.6.0",
    "jest-localstorage-mock": "^2.3.0",
    "jest-styled-components": "^6.3.1",
    "mini-css-extract-plugin": "^0.4.5",
    "prettier": "^1.16.1",
    "react-test-renderer": "^16.7.0",
    "style-loader": "^0.23.0",
    "sw-precache-webpack-plugin": "^0.11.5",
    "webpack": "^4.17.0",
    "webpack-cli": "^3.1.0",
    "webpack-dev-server": "^3.1.8",
    "webpack-manifest-plugin": "^2.0.4"
  },
  "dependencies": {
    "@material-ui/core": "^3.9.0",
    "@material-ui/icons": "^3.0.2",
    "downshift": "^3.1.5",
    "history": "^4.7.2",
    "lz-string": "^1.4.4",
    "match-sorter": "^2.3.0",
    "object.pick": "^1.3.0",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "react-ga": "^2.5.3",
    "react-grid-layout": "^0.16.6",
    "react-url-query": "^1.4.0",
    "serve": "^10.1.1",
    "styled-components": "^4.1.1",
    "styled-normalize": "^8.0.4"
  },
  "jest": {
    "setupFiles": [
      "<rootDir>/src/utils/SetupTests/SetupTests.js",
      "jest-localstorage-mock"
    ],
    "moduleNameMapper": {
      ".+\\.(png|jpg|css)$": "identity-obj-proxy",
      ".+\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/utils/FileMock/FileMock.js"
    },
    "collectCoverageFrom": [
      "**/src/**.{js,jsx}"
    ]
  }
}
